-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseCalc -> Start                          (0)
	Start -> TripletList                               (1)
	Start -> Base TripletList                          (2)
	Base -> base Link '.'                              (3)
	TripletList -> Triplet '.' TripletList             (4)
	TripletList -> Triplet '.'                         (5)
	Triplet -> Subject PredList                        (6)
	Subject -> Link                                    (7)
	PredList -> Predicate ObjList                      (8)
	PredList -> Predicate ObjList ';' PredList         (9)
	Predicate -> Link                                  (10)
	ObjList -> ObjList ',' Object                      (11)
	ObjList -> Object                                  (12)
	Object -> lit                                      (13)
	Object -> Link                                     (14)
	Link -> '<' http '>'                               (15)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	base           { TokenBase p }
	lit            { TokenLiteral p $$ }
	http           { TokenURI p $$ }
	'.'            { TokenDot p }
	'<'            { TokenLeftArrow p }
	'>'            { TokenRightArrow p }
	','            { TokenComma p }
	';'            { TokenSemiColon p }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseCalc rule  0
	Start           rules 1, 2
	Base            rule  3
	TripletList     rules 4, 5
	Triplet         rule  6
	Subject         rule  7
	PredList        rules 8, 9
	Predicate       rule  10
	ObjList         rules 11, 12
	Object          rules 13, 14
	Link            rule  15

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseCalc -> . Start                         (rule 0)

	base           shift, and enter state 9
	'<'            shift, and enter state 6

	Start          goto state 7
	Base           goto state 8
	TripletList    goto state 2
	Triplet        goto state 3
	Subject        goto state 4
	Link           goto state 5

State 1

	Start -> . TripletList                              (rule 1)

	'<'            shift, and enter state 6

	TripletList    goto state 2
	Triplet        goto state 3
	Subject        goto state 4
	Link           goto state 5

State 2

	Start -> TripletList .                              (rule 1)

	%eof           reduce using rule 1


State 3

	TripletList -> Triplet . '.' TripletList            (rule 4)
	TripletList -> Triplet . '.'                        (rule 5)

	'.'            shift, and enter state 16


State 4

	Triplet -> Subject . PredList                       (rule 6)

	'<'            shift, and enter state 6

	PredList       goto state 13
	Predicate      goto state 14
	Link           goto state 15

State 5

	Subject -> Link .                                   (rule 7)

	'<'            reduce using rule 7


State 6

	Link -> '<' . http '>'                              (rule 15)

	http           shift, and enter state 12


State 7

	%start_parseCalc -> Start .                         (rule 0)

	%eof           accept


State 8

	Start -> Base . TripletList                         (rule 2)

	'<'            shift, and enter state 6

	TripletList    goto state 11
	Triplet        goto state 3
	Subject        goto state 4
	Link           goto state 5

State 9

	Base -> base . Link '.'                             (rule 3)

	'<'            shift, and enter state 6

	Link           goto state 10

State 10

	Base -> base Link . '.'                             (rule 3)

	'.'            shift, and enter state 23


State 11

	Start -> Base TripletList .                         (rule 2)

	%eof           reduce using rule 2


State 12

	Link -> '<' http . '>'                              (rule 15)

	'>'            shift, and enter state 22


State 13

	Triplet -> Subject PredList .                       (rule 6)

	'.'            reduce using rule 6


State 14

	PredList -> Predicate . ObjList                     (rule 8)
	PredList -> Predicate . ObjList ';' PredList        (rule 9)

	lit            shift, and enter state 21
	'<'            shift, and enter state 6

	ObjList        goto state 18
	Object         goto state 19
	Link           goto state 20

State 15

	Predicate -> Link .                                 (rule 10)

	lit            reduce using rule 10
	'<'            reduce using rule 10


State 16

	TripletList -> Triplet '.' . TripletList            (rule 4)
	TripletList -> Triplet '.' .                        (rule 5)

	'<'            shift, and enter state 6
	%eof           reduce using rule 5

	TripletList    goto state 17
	Triplet        goto state 3
	Subject        goto state 4
	Link           goto state 5

State 17

	TripletList -> Triplet '.' TripletList .            (rule 4)

	%eof           reduce using rule 4


State 18

	PredList -> Predicate ObjList .                     (rule 8)
	PredList -> Predicate ObjList . ';' PredList        (rule 9)
	ObjList -> ObjList . ',' Object                     (rule 11)

	'.'            reduce using rule 8
	','            shift, and enter state 24
	';'            shift, and enter state 25


State 19

	ObjList -> Object .                                 (rule 12)

	'.'            reduce using rule 12
	','            reduce using rule 12
	';'            reduce using rule 12


State 20

	Object -> Link .                                    (rule 14)

	'.'            reduce using rule 14
	','            reduce using rule 14
	';'            reduce using rule 14


State 21

	Object -> lit .                                     (rule 13)

	'.'            reduce using rule 13
	','            reduce using rule 13
	';'            reduce using rule 13


State 22

	Link -> '<' http '>' .                              (rule 15)

	lit            reduce using rule 15
	'.'            reduce using rule 15
	'<'            reduce using rule 15
	','            reduce using rule 15
	';'            reduce using rule 15


State 23

	Base -> base Link '.' .                             (rule 3)

	'<'            reduce using rule 3


State 24

	ObjList -> ObjList ',' . Object                     (rule 11)

	lit            shift, and enter state 21
	'<'            shift, and enter state 6

	Object         goto state 27
	Link           goto state 20

State 25

	PredList -> Predicate ObjList ';' . PredList        (rule 9)

	'<'            shift, and enter state 6

	PredList       goto state 26
	Predicate      goto state 14
	Link           goto state 15

State 26

	PredList -> Predicate ObjList ';' PredList .        (rule 9)

	'.'            reduce using rule 9


State 27

	ObjList -> ObjList ',' Object .                     (rule 11)

	'.'            reduce using rule 11
	','            reduce using rule 11
	';'            reduce using rule 11


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 16
Number of terminals: 8
Number of non-terminals: 11
Number of states: 28
