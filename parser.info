-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseCalc -> Start                          (0)
	Start -> Triplet                                   (1)
	Start -> Base                                      (2)
	Start -> Prefix                                    (3)
	Start -> ShortTriplet                              (4)
	Start -> Start '.' Start                           (5)
	Start -> Start '.'                                 (6)
	Triplet -> Sub PredList                            (7)
	ShortTriplet -> ShortSub PredList                  (8)
	Sub -> Link                                        (9)
	ShortSub -> Short                                  (10)
	PredList -> Predicate ObjList                      (11)
	PredList -> Predicate ObjList ';' PredList         (12)
	Predicate -> Link                                  (13)
	ObjList -> ObjList ',' Object                      (14)
	ObjList -> Object                                  (15)
	Object -> lit                                      (16)
	Object -> Link                                     (17)
	Object -> Short                                    (18)
	Prefix -> prefix lit ':' Link                      (19)
	Prefix -> prefix lit ':' short                     (20)
	Base -> base Link                                  (21)
	Link -> http                                       (22)
	Short -> short                                     (23)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	prefix         { TokenPrefix p }
	base           { TokenBase p }
	lit            { TokenLiteral p $$ }
	http           { TokenURI p $$ }
	short          { TokenShort p $$ }
	'.'            { TokenDot p }
	','            { TokenComma p }
	';'            { TokenSemiColon p }
	':'            { TokenColon p }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseCalc rule  0
	Start           rules 1, 2, 3, 4, 5, 6
	Triplet         rule  7
	ShortTriplet    rule  8
	Sub             rule  9
	ShortSub        rule  10
	PredList        rules 11, 12
	Predicate       rule  13
	ObjList         rules 14, 15
	Object          rules 16, 17, 18
	Prefix          rules 19, 20
	Base            rule  21
	Link            rule  22
	Short           rule  23

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseCalc -> . Start                         (rule 0)

	prefix         shift, and enter state 12
	base           shift, and enter state 13
	http           shift, and enter state 5
	short          shift, and enter state 14

	Start          goto state 6
	Triplet        goto state 2
	ShortTriplet   goto state 7
	Sub            goto state 3
	ShortSub       goto state 8
	Prefix         goto state 9
	Base           goto state 10
	Link           goto state 4
	Short          goto state 11

State 1

	Start -> . Triplet                                  (rule 1)

	http           shift, and enter state 5

	Triplet        goto state 2
	Sub            goto state 3
	Link           goto state 4

State 2

	Start -> Triplet .                                  (rule 1)

	'.'            reduce using rule 1
	%eof           reduce using rule 1


State 3

	Triplet -> Sub . PredList                           (rule 7)

	http           shift, and enter state 5

	PredList       goto state 21
	Predicate      goto state 18
	Link           goto state 19

State 4

	Sub -> Link .                                       (rule 9)

	http           reduce using rule 9


State 5

	Link -> http .                                      (rule 22)

	lit            reduce using rule 22
	http           reduce using rule 22
	short          reduce using rule 22
	'.'            reduce using rule 22
	','            reduce using rule 22
	';'            reduce using rule 22
	%eof           reduce using rule 22


State 6

	%start_parseCalc -> Start .                         (rule 0)
	Start -> Start . '.' Start                          (rule 5)
	Start -> Start . '.'                                (rule 6)

	'.'            shift, and enter state 20
	%eof           accept


State 7

	Start -> ShortTriplet .                             (rule 4)

	'.'            reduce using rule 4
	%eof           reduce using rule 4


State 8

	ShortTriplet -> ShortSub . PredList                 (rule 8)

	http           shift, and enter state 5

	PredList       goto state 17
	Predicate      goto state 18
	Link           goto state 19

State 9

	Start -> Prefix .                                   (rule 3)

	'.'            reduce using rule 3
	%eof           reduce using rule 3


State 10

	Start -> Base .                                     (rule 2)

	'.'            reduce using rule 2
	%eof           reduce using rule 2


State 11

	ShortSub -> Short .                                 (rule 10)

	http           reduce using rule 10


State 12

	Prefix -> prefix . lit ':' Link                     (rule 19)
	Prefix -> prefix . lit ':' short                    (rule 20)

	lit            shift, and enter state 16


State 13

	Base -> base . Link                                 (rule 21)

	http           shift, and enter state 5

	Link           goto state 15

State 14

	Short -> short .                                    (rule 23)

	http           reduce using rule 23
	'.'            reduce using rule 23
	','            reduce using rule 23
	';'            reduce using rule 23
	%eof           reduce using rule 23


State 15

	Base -> base Link .                                 (rule 21)

	'.'            reduce using rule 21
	%eof           reduce using rule 21


State 16

	Prefix -> prefix lit . ':' Link                     (rule 19)
	Prefix -> prefix lit . ':' short                    (rule 20)

	':'            shift, and enter state 28


State 17

	ShortTriplet -> ShortSub PredList .                 (rule 8)

	'.'            reduce using rule 8
	%eof           reduce using rule 8


State 18

	PredList -> Predicate . ObjList                     (rule 11)
	PredList -> Predicate . ObjList ';' PredList        (rule 12)

	lit            shift, and enter state 27
	http           shift, and enter state 5
	short          shift, and enter state 14

	ObjList        goto state 23
	Object         goto state 24
	Link           goto state 25
	Short          goto state 26

State 19

	Predicate -> Link .                                 (rule 13)

	lit            reduce using rule 13
	http           reduce using rule 13
	short          reduce using rule 13


State 20

	Start -> Start '.' . Start                          (rule 5)
	Start -> Start '.' .                                (rule 6)

	prefix         shift, and enter state 12
	base           shift, and enter state 13
	http           shift, and enter state 5
	short          shift, and enter state 14
	'.'            reduce using rule 6
	%eof           reduce using rule 6

	Start          goto state 22
	Triplet        goto state 2
	ShortTriplet   goto state 7
	Sub            goto state 3
	ShortSub       goto state 8
	Prefix         goto state 9
	Base           goto state 10
	Link           goto state 4
	Short          goto state 11

State 21

	Triplet -> Sub PredList .                           (rule 7)

	'.'            reduce using rule 7
	%eof           reduce using rule 7


State 22

	Start -> Start . '.' Start                          (rule 5)
	Start -> Start '.' Start .                          (rule 5)
	Start -> Start . '.'                                (rule 6)

	'.'            reduce using rule 5
	%eof           reduce using rule 5


State 23

	PredList -> Predicate ObjList .                     (rule 11)
	PredList -> Predicate ObjList . ';' PredList        (rule 12)
	ObjList -> ObjList . ',' Object                     (rule 14)

	'.'            reduce using rule 11
	','            shift, and enter state 31
	';'            shift, and enter state 32
	%eof           reduce using rule 11


State 24

	ObjList -> Object .                                 (rule 15)

	'.'            reduce using rule 15
	','            reduce using rule 15
	';'            reduce using rule 15
	%eof           reduce using rule 15


State 25

	Object -> Link .                                    (rule 17)

	'.'            reduce using rule 17
	','            reduce using rule 17
	';'            reduce using rule 17
	%eof           reduce using rule 17


State 26

	Object -> Short .                                   (rule 18)

	'.'            reduce using rule 18
	','            reduce using rule 18
	';'            reduce using rule 18
	%eof           reduce using rule 18


State 27

	Object -> lit .                                     (rule 16)

	'.'            reduce using rule 16
	','            reduce using rule 16
	';'            reduce using rule 16
	%eof           reduce using rule 16


State 28

	Prefix -> prefix lit ':' . Link                     (rule 19)
	Prefix -> prefix lit ':' . short                    (rule 20)

	http           shift, and enter state 5
	short          shift, and enter state 30

	Link           goto state 29

State 29

	Prefix -> prefix lit ':' Link .                     (rule 19)

	'.'            reduce using rule 19
	%eof           reduce using rule 19


State 30

	Prefix -> prefix lit ':' short .                    (rule 20)

	'.'            reduce using rule 20
	%eof           reduce using rule 20


State 31

	ObjList -> ObjList ',' . Object                     (rule 14)

	lit            shift, and enter state 27
	http           shift, and enter state 5
	short          shift, and enter state 14

	Object         goto state 34
	Link           goto state 25
	Short          goto state 26

State 32

	PredList -> Predicate ObjList ';' . PredList        (rule 12)

	http           shift, and enter state 5

	PredList       goto state 33
	Predicate      goto state 18
	Link           goto state 19

State 33

	PredList -> Predicate ObjList ';' PredList .        (rule 12)

	'.'            reduce using rule 12
	%eof           reduce using rule 12


State 34

	ObjList -> ObjList ',' Object .                     (rule 14)

	'.'            reduce using rule 14
	','            reduce using rule 14
	';'            reduce using rule 14
	%eof           reduce using rule 14


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 24
Number of terminals: 9
Number of non-terminals: 14
Number of states: 35
